name: GitHub Classroom Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  autograding:
    name: Autograding
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc make libc6-dev

      - name: Compilation Test
        id: compilation
        run: |
          make clean
          if make all 2>&1; then
            echo "Compilation successful"
            echo "compilation_passed=true" >> $GITHUB_OUTPUT
          else
            echo "Compilation failed"
            echo "compilation_passed=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Run Voltage Tests
        id: voltage-tests
        run: |
          ./tests/test_voltage > voltage_results.txt 2>&1 || true
          cat voltage_results.txt

          passed=$(grep "Passed:" voltage_results.txt | awk '{print $2}' || echo "0")
          total=$(grep "Total tests:" voltage_results.txt | awk '{print $3}' || echo "10")

          echo "voltage_passed=$passed" >> $GITHUB_OUTPUT
          echo "voltage_total=$total" >> $GITHUB_OUTPUT
          echo "Voltage tests: $passed/$total passed"

      - name: Run Power Tests
        id: power-tests
        run: |
          ./tests/test_power > power_results.txt 2>&1 || true
          cat power_results.txt

          passed=$(grep "Passed:" power_results.txt | awk '{print $2}' || echo "0")
          total=$(grep "Total tests:" power_results.txt | awk '{print $3}' || echo "10")

          echo "power_passed=$passed" >> $GITHUB_OUTPUT
          echo "power_total=$total" >> $GITHUB_OUTPUT
          echo "Power tests: $passed/$total passed"

      - name: Calculate Scores
        run: |
          # Compilation score (20 points)
          if [ "${{ steps.compilation.outputs.compilation_passed }}" = "true" ]; then
            compilation_score=20
          else
            compilation_score=0
          fi

          # Voltage tests score (40 points)
          voltage_passed=${{ steps.voltage-tests.outputs.voltage_passed }}
          voltage_total=${{ steps.voltage-tests.outputs.voltage_total }}
          if [ "$voltage_total" -eq 0 ]; then
            voltage_score=0
          else
            voltage_score=$((voltage_passed * 40 / voltage_total))
          fi

          # Power tests score (40 points)
          power_passed=${{ steps.power-tests.outputs.power_passed }}
          power_total=${{ steps.power-tests.outputs.power_total }}
          if [ "$power_total" -eq 0 ]; then
            power_score=0
          else
            power_score=$((power_passed * 40 / power_total))
          fi

          total_score=$((compilation_score + voltage_score + power_score))

          echo "## Autograding Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test Category | Score | Max Points |" >> $GITHUB_STEP_SUMMARY
          echo "|---------------|-------|------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Compilation | $compilation_score | 20 |" >> $GITHUB_STEP_SUMMARY
          echo "| Voltage Tests | $voltage_score | 40 |" >> $GITHUB_STEP_SUMMARY
          echo "| Power Tests | $power_score | 40 |" >> $GITHUB_STEP_SUMMARY
          echo "| **Total** | **$total_score** | **100** |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Details:" >> $GITHUB_STEP_SUMMARY
          echo "- Voltage validation: $voltage_passed/$voltage_total tests passed" >> $GITHUB_STEP_SUMMARY
          echo "- Power calculation: $power_passed/$power_total tests passed" >> $GITHUB_STEP_SUMMARY

      - name: Autograding Reporter
        uses: education/autograding-grading-reporter@v1
        env:
          COMPILATION_RESULTS: "${{ steps.compilation.outputs.compilation_passed }}"
          VOLTAGE_RESULTS: "${{ steps.voltage-tests.outputs.voltage_passed }}/${{ steps.voltage-tests.outputs.voltage_total }}"
          POWER_RESULTS: "${{ steps.power-tests.outputs.power_passed }}/${{ steps.power-tests.outputs.power_total }}"
        with:
          runners: compilation,voltage-tests,power-tests

